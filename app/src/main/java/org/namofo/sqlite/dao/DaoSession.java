package org.namofo.sqlite.dao;

import android.database.sqlite.SQLiteDatabase;

import org.namofo.bean.Article;
import org.namofo.bean.ArticleCategory;
import org.namofo.bean.ArticleFileType;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig articleDaoConfig;
    private final DaoConfig articleFileTypeDaoConfig;
    private final DaoConfig articleCategoryDaoConfig;

    private final ArticleDao articleDao;
    private final ArticleFileTypeDao articleFileTypeDao;
    private final ArticleCategoryDao articleCategoryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        articleDaoConfig = daoConfigMap.get(ArticleDao.class).clone();
        articleDaoConfig.initIdentityScope(type);

        articleFileTypeDaoConfig = daoConfigMap.get(ArticleFileTypeDao.class).clone();
        articleFileTypeDaoConfig.initIdentityScope(type);

        articleCategoryDaoConfig = daoConfigMap.get(ArticleCategoryDao.class).clone();
        articleCategoryDaoConfig.initIdentityScope(type);

        articleDao = new ArticleDao(articleDaoConfig, this);
        articleFileTypeDao = new ArticleFileTypeDao(articleFileTypeDaoConfig, this);
        articleCategoryDao = new ArticleCategoryDao(articleCategoryDaoConfig, this);

        registerDao(Article.class, articleDao);
        registerDao(ArticleFileType.class, articleFileTypeDao);
        registerDao(ArticleCategory.class, articleCategoryDao);
    }
    
    public void clear() {
        articleDaoConfig.getIdentityScope().clear();
        articleFileTypeDaoConfig.getIdentityScope().clear();
        articleCategoryDaoConfig.getIdentityScope().clear();
    }

    public ArticleDao getArticleDao() {
        return articleDao;
    }

    public ArticleFileTypeDao getArticleFileTypeDao() {
        return articleFileTypeDao;
    }

    public ArticleCategoryDao getArticleCategoryDao() {
        return articleCategoryDao;
    }

}
